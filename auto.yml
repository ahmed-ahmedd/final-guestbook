---
- name: CI/CD Automation
  hosts: localhost
  gather_facts: yes
  tasks:

    - name: Check if SonarQube is running
      shell: docker ps --filter "name=sonarqube" --format "{{ '{{' }}.Names{{ '}}' }}"
      register: sonar_status
      changed_when: false

    - name: Print SonarQube Status
      debug:
        msg: "SonarQube Status: {{ sonar_status.stdout }}"

    - name: Run SonarQube Scanner
      shell: |
        sonar-scanner \
          -Dsonar.projectKey=final-guestbook \
          -Dsonar.sources=. \
          -Dsonar.host.url=http://16.170.182.27:9000 \
          -Dsonar.login={{ lookup('env', 'SONAR_TOKEN') }} \
          -Dsonar.qualitygate.wait=true \
          -Dsonar.exclusions="**/node_modules/**,**/tests/**,**/*.log,**/bin/**,**/out/**"
      environment:
        SONAR_TOKEN: "{{ lookup('env', 'SONAR_TOKEN') }}"
      when: sonar_status.stdout != ""

    - name: Remove Old Docker Image
      shell: |
        echo "Removing old Docker images..."
        docker rmi $(docker images -q final-guestbook) || echo "No old images found."

    - name: Build Docker Image (No Cache)
      shell: |
        echo "Building Docker image..."
        docker build --no-cache -t final-guestbook:latest .

    - name: Notify Slack
      shell: |
        curl -X POST -H 'Content-type: application/json' \
        --data '{"text":"âœ… Jenkins Pipeline Completed! New Docker Image Built: final-guestbook:latest"}' \
        https://hooks.slack.com/services/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
